<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">

<!--웹 View에 관한것이므로, 웹자원 관리하는 WEB-INF폴도에 위치함.  -->

	  <welcome-file-list>
	    <welcome-file>index.do</welcome-file>
	  </welcome-file-list>
  
	  <!-- EntryPoint 1 :  상위 컨테이너의 빈 메타데이터 등록 파일의 위치  -->
		<context-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:kr/or/ddit/spring/conf/*-context.xml</param-value>
		</context-param>
	
	<!-- 상위컨테이너 초기화 설정  -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	
	<!-- 상위컨테이너와 하위컨테이너 사이에 필터가 위치함. -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name> <!-- request와 response의 캐릿터셋을 공통적으로 utf-8로 맞추겠다는 의미 -->
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  
	  <!-- 이 보안필터를 대체하려면 Spring Security가 필요. -->
	  <filter>
	  	<filter-name>GeneratePrincipalFilter</filter-name>
	  	<filter-class>kr.or.ddit.principal.GeneratePrincipalFilter</filter-class>
	  </filter>
	  <filter-mapping>
	  	<filter-name>GeneratePrincipalFilter</filter-name>
	  	<url-pattern>/*</url-pattern>
	  </filter-mapping>
<!-- 	  <filter> -->
<!-- 	  	<filter-name>AuthenticationCheckFilter</filter-name> -->
<!-- 	  	<filter-class>kr.or.ddit.filter.auth.AuthenticationCheckFilter</filter-class> -->
<!-- 	  </filter> -->
<!-- 	 <filter-mapping> -->
<!-- 	 	<filter-name>AuthenticationCheckFilter</filter-name> -->
<!-- 	 	<url-pattern>/*</url-pattern> -->
<!-- 	 </filter-mapping> -->
<!-- 	 <filter> -->
<!-- 	 	<filter-name>AuthorizationCheckFilter</filter-name> -->
<!-- 	 	<filter-class>kr.or.ddit.filter.auth.AuthorizationCheckFilter</filter-class> -->
<!-- 	 </filter> -->
<!-- 	 <filter-mapping> -->
<!-- 	 	<filter-name>AuthorizationCheckFilter</filter-name> -->
<!-- 	 	<url-pattern>/*</url-pattern> -->
<!-- 	 </filter-mapping> -->
	 
	 <!-- EntryPoint2 : Front Controller Pattern에 따라 동작하는 유일한 서블릿 등록, 하위 컨테이너 형성 -->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/springmvc/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- 정적 자원에 대한 요청을 포함한 모든 요청 매핑 -->
	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
		<url-pattern>/index.do</url-pattern>	<!-- 이렇게 해줘야, 스프링 내부에있는 유일한 서블렛이 이걸 사용할 수 있게 됨 -->
	</servlet-mapping>
	 
</web-app>